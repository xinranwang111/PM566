---
title: "Assignment1"
author: "Xinran Wang"
editor: visual
format: 
  html:
    embed-resources: true
fig-width: 8
fig-height: 6
theme: cosmos
---

## Settings

```{r}
suppressPackageStartupMessages(library(knitr))

suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(datasauRus))

suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(ggthemes))
suppressPackageStartupMessages(library(ggpubr))

suppressPackageStartupMessages(library(leaflet))
suppressPackageStartupMessages(library(leaflet.extras2))
```

```{r}
idir <- "/Users/xinranwang/Documents/Course/25Fall/PM566/Data"
```

## EDA

1.  (30 points) Given the formulated question from the assignment description, you will now conduct EDA Checklist items 1-5. First, download 2002 and 2022 data for all sites in California from the [EPA Air Quality Data website](https://www.epa.gov/outdoor-air-quality-data/download-daily-data), then read the data into R. For each of the two datasets, check the dimensions, headers, footers, variable names and variable types. Check the distribution of the key variable we are analyzing (PM). Write up a summary of all of your findings.

    [**Summary.** This data frame includes measurements at the state level (California), county level (51 counties), and city level (199 monitoring sites). PM2.5 was recorded using 21 different methods (see Method.Description for details) and reported in units of µg/m3 LC. ]{style="color:blue"}
    
    ```{r}
    read_and_check <- function(idir, filename, year){
      df <- read.csv(paste0(idir, "/", filename)) %>% mutate(Year = year)
      print(paste0("Dimension: ", paste(dim(df), collapse = " x "),
                   "; # Rows: ", nrow(df), 
                   "; # Columns: ", ncol(df)))
      
      print(paste0("Variables names: ", paste(colnames(df), collapse = ", ")))
      
      print("Variable structures: ")
      str(df)
      
      return(df)
    }
    ```

    ## 2002

    ```{r}
    df_2002 <- read_and_check(idir, "ad_viz_plotval_data_PM2.5_2002.csv", "2002")
    kable(head(df_2002, 1), align = "c")
    kable(tail(df_2002, 1), align = "c")
    ```

    ## 2022

    ```{r}
    df_2022 <- read_and_check(idir, "ad_viz_plotval_data_PM2.5_2022.csv", "2022")
    kable(head(df_2022, 1), align = "c")
    kable(tail(df_2022, 1), align = "c")
    ```

    ```{r}
    identical(colnames(df_2002), colnames(df_2022))
    ```

    [**Note.** Here, I combined data frames as they have identical column names.]{style="color:blue"}

    ```{r}
    df <- rbind(df_2002, df_2022)
    rm(df_2002, df_2022)
    ```

    ## Distribution of PM 2.5
    [**Summary.** There is a striking decrease in daily PM2.5 concentrations from 2002 to 2022. Mean and median PM 2.5 were cut in half. However, there are more outliers in 2022 and max PM 2.5 increased by 3 fold]{style="color:blue"}
    ```{r}
    df <- df %>% rename(PM2.5 = Daily.Mean.PM2.5.Concentration) 
    df$Year <- factor(df$Year, levels = c("2002", "2022"))

    summary1 <- df %>% 
      group_by(Year) %>%
      summarise(
        mean          = round(mean(PM2.5, na.rm = T), 2), 
        sd            = round(sd(PM2.5, na.rm = TRUE), 2),
        min           = min(PM2.5, na.rm = TRUE),
        q25           = quantile(PM2.5, 0.25, na.rm = TRUE),
        median        = median(PM2.5, na.rm = TRUE),
        q75           = quantile(PM2.5, 0.75, na.rm = TRUE),
        max           = max(PM2.5, na.rm = TRUE)
      ) 
    kable(as.data.frame(summary1), align = "c")

    ```

2.  (10 points) Combine the two years of data into one data frame. Use the `Date` variable to create a new column for year, which will serve as an identifier. Change the names of the key variables so that they are easier to refer to in your code.

    [**Note.** (1) I've created new column for year when reading data, (2) I've renamed Daily.Mean.PM2.5.Concentration to PM2.5 in previous step (3) I've combined data in previous step (before plotting).]{style="color:blue"}

3.  (20 points) Create a basic map (or maps) in `leaflet` showing the locations of the monitoring sites, using different colors for each year. Summarize the spatial distribution of the sites. How does this distribution change from 2002 to 2022?

    ## Map (2002 vs 2022)
    [**Summary.** By 2022, more sites had been established, frequently clustering near the 2002 sites (see map above). The number of sites increased 3.75-fold from 2002 to 2022 (rising from 15,978 to 59,918 sites; see histrogram and table in Question 4).]{style="color:blue"}
    ```{r}
    # Map
    #scales::hue_pal()(2)
    pal <- leaflet::colorFactor(c("#F8766D", "#00BFC4"), domain = levels(df$Year))

    leaflet(df) %>%
      addMapPane("left",  zIndex = 410) %>% 
      addMapPane("right", zIndex = 410) %>% 
      
      addProviderTiles('OpenStreetMap',
                   options = pathOptions(pane = "left"),
                   layerId = "layer_2002") %>%
      addProviderTiles('OpenStreetMap',
                   options = pathOptions(pane = "right"),
                   layerId = "layer_2022") %>%
      
      addCircles(data = df %>% filter(Year == 2002),
                 lat = ~Site.Latitude,
                 lng = ~Site.Longitude,
                 fillColor = "#F8766D",
                 color = "black",
                 stroke = TRUE,
                 weight = 0.2,
                 opacity = 0.5,
                 fillOpacity = 1, 
                 radius = 100,
                 options = pathOptions(pane = "left"),
                 group = "2002") %>%
      addCircles(data = df %>% filter(Year == 2022),
                 lat = ~Site.Latitude,
                 lng = ~Site.Longitude,
                 fillColor = "#00BFC4",
                 color = "black",
                 stroke = TRUE,
                 weight = 0.2,
                 opacity = 0.5,
                 fillOpacity = 1, 
                 radius = 100, 
                 options = pathOptions(pane = "right"),
                 group = "2022") %>%
      
      addLegend("topright", 
                title = "Location of Monitor Sites",
                pal = pal, values = ~Year, labels = ~Year
                ) %>%
      
      addLayersControl(overlayGroups = ~c("2002", "2022"),
                   options = layersControlOptions(collapsed = F)) %>%
      
      addSidebyside(
          layerId = "sidecontrols",
          leftId = "layer_2002",
          rightId = "layer_2022")

    #https://rdrr.io/cran/leaflet.extras2/man/addSidebyside.html
    ```

4.  (10 points) Check for any data issues such as missing or implausible values of PM in the combined dataset. Calculate the proportion of missing/implausible values for each year and report any temporal patterns you see in these observations.

    [**Missing values.** There are no missing values in either year.]{style="color:blue"}

    [**Implausible values.** In 2022, 215 out of 59,918 observations (0.36%) were implausible (defined as PM2.5 \< 0).]{style="color:blue"}

    [**Temporal Patterns.** The number of implausible observations increased in 2022, although the count remained very small overall).]{style="color:blue"}
    
    ```{r}
    summary2 <- df %>% 
      group_by(Year) %>%
      summarise(
        `# Total`          = n(),
        `# Missing`        = sum(is.na(PM2.5)),
        `# Implausible`    = sum(PM2.5 < 0, na.rm = TRUE)
      ) %>%
      mutate(    
        `% Missing`     = paste0(round((`# Missing` / `# Total`) * 100, 2), "%"),
        `% Implausible` = paste0(round((`# Implausible` / `# Total`) * 100, 2), "%")) %>%
      select(`# Total`, `# Missing`, `% Missing`, `# Implausible`, `% Implausible`)

    kable(as.data.frame(summary2), align = "c")

    # Count of PM 2.5 Concentration
    df$Year <- factor(df$Year, levels = c("2022", "2002"))  # 2002 will be drawn last (on top)
    ggplot(df, aes(x = PM2.5, fill = Year, color = Year)) +
      geom_histogram(bins = 100, alpha = 0.5, position = "identity") + 
      labs(title = "Histrogram of Daily PM 2.5 Concentration", 
           x = "PM2.5 Concentration",
           y = "Count") +
      scale_color_manual(name = "Year",
                         values = c("2002" = "#F8766D", "2022" = "#00BFC4")) +
      scale_fill_manual(name = "Year",
                         values = c("2002" = "#F8766D", "2022" = "#00BFC4")) +
      theme_classic()
    
    df$Year <- factor(df$Year, levels = c("2002", "2022"))  # 2002 will be drawn last (on top)
    ```

5.  (30 points) Explore the main question of interest at three different levels of spatial resolution. Create exploratory plots (e.g. boxplots, histograms, line plots, violin plots) and summary statistics that best suit each level of data. Be sure to write up explanations of what you observe in these data.

-   Level 1: State. Examine the primary question for the entire state.

-   Level 2: County. Examine the primary question for every county in California.

-   Level 3: City. Restrict the data to sites in Los Angeles county and examine the primary question for every site.

    ## Level 1: State
    [**Summary. **The mean of daily PM 2.5 in 2022 (mean: 8.41; sd: 7.64) is lower than than 2002 (mean: 16.12; sd: 13.87), despite more outliers. ]{style="color:blue"}
    ```{r}
    summary3 <- df %>% 
      group_by(Year) %>%
      summarise(
        n             = n(),
        mean          = round(mean(PM2.5, na.rm = T), 2), 
        sd            = round(sd(PM2.5, na.rm = T), 2)) %>%
      mutate(`Mean (SD)`= paste0(mean, " (", sd, ")")) %>%
      select(Year, `Mean (SD)`) %>%
      arrange(Year)
    kable(as.data.frame(summary3), align = "c")

    ggplot(df, aes_string(x = "Year", y = "PM2.5", fill = "Year", color = "Year")) +
      geom_boxplot(color = "black", size = 0.2) +
      labs(title = paste0(" Daily PM2.5 Concentration (2002 vs 2022) in California"),
           x = "Year",
           y = paste0("Daily PM2.5 Concentration")) +
      scale_color_manual(name = "Year",
                         values = c("2002" = "#F8766D", "2022" = "#00BFC4")) +
      theme_minimal() +
      theme(legend.position = "bottom",
            legend.box = "horizontal",
            legend.justification = "center")
    ```
    
    ## Level 2: County
    [**Summary. **The mean of daily PM 2.5 for most counties in California in 2022 are lower than that of 2000, except for Trinity, Siskiyou, Mono, and Del Norte.]{style="color:blue"}
    ```{r fig.height=10, fig.width=7}
    summary4 <- df %>% 
      group_by(County, Year) %>%
      summarise(
        n             = n(),
        mean          = round(mean(PM2.5, na.rm = T), 2), 
        sd            = round(sd(PM2.5, na.rm = TRUE), 2)) %>%
      mutate(`Mean (SD)`= paste0(mean, " (", sd, ")")) %>%
      select(Year, County, `Mean (SD)`) %>%
      pivot_wider(
        names_from = Year, 
        values_from = `Mean (SD)`, 
        names_prefix = "Mean (SD) in ") %>%
      select(County, `Mean (SD) in 2002`, `Mean (SD) in 2022`) 
    kable(as.data.frame(summary4), align = "c")

    df_couty <- df %>% group_by(Year, County) %>% 
      summarise(
        n             = n(),
        mean_PM2.5    = mean(PM2.5, na.rm = T), 
        sd_PM2.5      = sd(PM2.5, na.rm = T),
      ) %>%
      mutate(se_PM2.5 = sd_PM2.5 / sqrt(n))

    ggplot(df_couty, 
           aes(y = County, x = mean_PM2.5, 
               xmin = mean_PM2.5 - 1.96 * se_PM2.5, 
               xmax = mean_PM2.5 + 1.96 * se_PM2.5, 
               color = Year, group = Year)) +
      geom_pointrange(size = 0.3, fatten = 1.2) +
      labs(title = paste0("Daily PM2.5 Concentration (2002 vs 2022), by County"),
           x = "Daily PM2.5 Concentration (95% CI)", y = "County",) +
      scale_color_manual(name = "Year",
                         values = c("2002" = "#F8766D", "2022" = "#00BFC4")) +
      theme_minimal() +
      theme(legend.position = "bottom",
            legend.box = "horizontal",
            legend.justification = "center")

    ```

    ## Level 3: Sites in LA County
    [**Summary. ** The mean of daily PM 2.5 for all cities in Los Angeles county in 2022 are lower than that of 2000]{style="color:blue"}
```{r fig.height=10, fig.width=7}

  summary5 <- df %>% 
           filter(County == "Los Angeles", 
                  Year %in% c("2002", "2022"),
                  Local.Site.Name != "") %>%
      group_by(Year, Local.Site.Name) %>%
      summarise(
        n             = n(),
        mean          = round(mean(PM2.5, na.rm = T), 2), 
        sd            = round(sd(PM2.5, na.rm = TRUE), 2)) %>%
      mutate(`Mean (SD)`= paste0(mean, " (", sd, ")")) %>%
      select(Year, Local.Site.Name, `Mean (SD)`) %>%
      pivot_wider(
        names_from = Year, 
        values_from = `Mean (SD)`, 
        names_prefix = "Mean (SD) in ") %>%
      mutate(`Local Site Name` = Local.Site.Name) %>%
      select(`Local Site Name`, `Mean (SD) in 2002`, `Mean (SD) in 2022`) %>%
      arrange(`Local Site Name`) 
  kable(as.data.frame(summary5), align = "c")
    
  ggplot(df %>% 
           filter(County == "Los Angeles", 
                  Year %in% c("2002", "2022"),
                  Local.Site.Name != ""), 
       aes(x = PM2.5,
           y = Local.Site.Name,
           fill = Year)) +
  geom_violin(alpha = 0.6, scale = "width", 
              position = position_dodge(width = 0.8), trim = FALSE) +
  labs(
    title = "Daily PM2.5 Concentration in LA County",
    subtitle = "By monitoring sites (2002 vs 2022)",
    x = "Daily PM2.5 Concentration",
    y = "Site",
    fill = "Year") +
  scale_color_manual(name = "Year",
                         values = c("2002" = "#F8766D", "2022" = "#00BFC4")) +
  scale_fill_manual(name = "Year",
                         values = c("2002" = "#F8766D", "2022" = "#00BFC4")) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    legend.box = "horizontal",
    legend.justification = "center"
  )
```

Reminder: after you upload your final rendered document to GitHub, you should download it to make sure that it looks right! If you haven’t included `embed-resources: true` in the YAML header, none of your figures will show up!
